.TH "irrpoly::gfn" 3 "Пн 4 Май 2020" "Version 2.1.2" "irrpoly" \" -*- nroff -*-
.ad l
.nh
.SH NAME
irrpoly::gfn
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gf\&.hpp>\fP
.SS "Открытые члены"

.in +1c
.ti -1c
.RI "auto \fBvalue\fP () const \-> uintmax_t"
.br
.RI "Возвращает значение класса в виде целого числа\&. "
.ti -1c
.RI "\fBgfn\fP (const \fBgf\fP &field)"
.br
.RI "Конструктор по умолчанию, обнуляет переменную\&. "
.ti -1c
.RI "\fBgfn\fP (const \fBgf\fP &field, const uintmax_t val)"
.br
.RI "Поле всегда принимается по указателю и копируется в последний момент\&. "
.ti -1c
.RI "\fBgfn\fP (const \fBgfn\fP &other)=default"
.br
.ti -1c
.RI "\fBgfn\fP (\fBgfn\fP &&other)=default"
.br
.ti -1c
.RI "auto \fBoperator=\fP (const \fBgfn\fP &other) \-> \fBgfn\fP &"
.br
.ti -1c
.RI "auto \fBbase\fP () const \-> uintmax_t"
.br
.RI "Возвращает основание поля Галуа\&. "
.ti -1c
.RI "auto \fBoperator=\fP (const uintmax_t other) \-> \fBgfn\fP &"
.br
.ti -1c
.RI "auto \fBfield\fP () const \-> const \fBgf\fP &"
.br
.ti -1c
.RI "auto \fBoperator+\fP () const \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator+\fP (const \fBgfn\fP &other) const \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator+\fP (const uintmax_t other) const \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator+=\fP (const \fBgfn\fP &other) \-> \fBgfn\fP &"
.br
.ti -1c
.RI "auto \fBoperator+=\fP (const uintmax_t other) \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator++\fP () \-> \fBgfn\fP &"
.br
.ti -1c
.RI "auto \fBoperator++\fP (int) &\-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator\-\fP () const \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator\-\fP (const \fBgfn\fP &other) const \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator\-\fP (const uintmax_t other) const \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator\-=\fP (const \fBgfn\fP &other) \-> \fBgfn\fP &"
.br
.ti -1c
.RI "auto \fBoperator\-=\fP (const uintmax_t other) \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator\-\-\fP () \-> \fBgfn\fP &"
.br
.ti -1c
.RI "auto \fBoperator\-\-\fP (int) &\-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator*\fP (const \fBgfn\fP &other) const \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator*\fP (const uintmax_t other) const \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator*=\fP (const \fBgfn\fP &other) \-> \fBgfn\fP &"
.br
.ti -1c
.RI "auto \fBoperator*=\fP (const uintmax_t other) \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBmul_inv\fP () \-> \fBgfn\fP"
.br
.RI "Возвращает обратное по умножению в виде gfn\&. "
.ti -1c
.RI "auto \fBoperator/\fP (const \fBgfn\fP &other) const \-> \fBgfn\fP"
.br
.RI "Операция деления определена как умножение на обратный элемент\&. "
.ti -1c
.RI "auto \fBoperator/\fP (const uintmax_t other) const \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator/=\fP (const \fBgfn\fP &other) \-> \fBgfn\fP &"
.br
.ti -1c
.RI "auto \fBoperator/=\fP (const uintmax_t other) \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBis_zero\fP () const \-> bool"
.br
.ti -1c
.RI "\fBoperator bool\fP () const"
.br
.ti -1c
.RI "auto \fBset_zero\fP () \-> \fBgfn\fP &"
.br
.in -1c
.SS "Открытые статические члены"

.in +1c
.ti -1c
.RI "static auto \fBrandom\fP (const \fBgf\fP &field) \-> \fBgfn\fP"
.br
.RI "Число в поле, всегда лежит в диапазоне [0, P-1]\&. "
.in -1c
.SS "Друзья"

.in +1c
.ti -1c
.RI "auto \fBoperator+\fP (uintmax_t, const \fBgfn\fP &) \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator\-\fP (uintmax_t, const \fBgfn\fP &) \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator*\fP (uintmax_t, const \fBgfn\fP &) \-> \fBgfn\fP"
.br
.ti -1c
.RI "auto \fBoperator/\fP (uintmax_t, const \fBgfn\fP &) \-> \fBgfn\fP"
.br
.ti -1c
.RI "template<class charT , class traits > auto \fBoperator<<\fP (std::basic_ostream< charT, traits > &, const \fBgfn\fP &) \-> std::basic_ostream< charT, traits > &"
.br
.ti -1c
.RI "template<class charT , class traits > auto \fBoperator>>\fP (std::basic_istream< charT, traits > &, \fBgfn\fP &) \-> std::basic_istream< charT, traits > &"
.br
.in -1c
.SH "Подробное описание"
.PP 
Класс, представляющий число в поле Галуа с корректно заданными арифметическими операциями и операторами сравнения\&. 
.SH "Методы"
.PP 
.SS "auto irrpoly::gfn::operator= (const \fBgfn\fP & other) \-> \fBgfn\fP & \fC [inline]\fP"
Операция присваивания корректно определена только для числел из одного поля, операция перемещения также корректно определена для неинициализированных переменных (случай field = nullptr)\&. 
.SS "static auto irrpoly::gfn::random (const \fBgf\fP & field) \-> \fBgfn\fP \fC [inline]\fP, \fC [static]\fP"

.PP
Число в поле, всегда лежит в диапазоне [0, P-1]\&. Генерирует случайное число в диапазоне [0, P-1]\&. 

.SH "Автор"
.PP 
Автоматически создано Doxygen для irrpoly из исходного текста\&.
