.TH "include/irrpoly/gf.hpp" 3 "Пн 4 Май 2020" "Version 2.1.0" "irrpoly" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/irrpoly/gf.hpp
.SH SYNOPSIS
.br
.PP
\fC#include 'nn\&.hpp'\fP
.br
\fC#include <algorithm>\fP
.br
\fC#include <utility>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <cstdint>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <random>\fP
.br
\fC#include <stdexcept>\fP
.br
\fC#include <type_traits>\fP
.br
\fC#include <cassert>\fP
.br
\fC#include <memory>\fP
.br

.SS "Классы"

.in +1c
.ti -1c
.RI "class \fBirrpoly::gfbase\fP"
.br
.ti -1c
.RI "class \fBirrpoly::gfn\fP"
.br
.in -1c
.SS "Макросы"

.in +1c
.ti -1c
.RI "#define \fBNN_CHECK_THROW\fP(_e)"
.br
.ti -1c
.RI "#define \fBCHECK_FIELD\fP(comparison)"
.br
.ti -1c
.RI "#define \fBGFN_COMPARISON_OPERATORS\fP(op)"
.br
.in -1c
.SS "Определения типов"

.in +1c
.ti -1c
.RI "using \fBirrpoly::gf\fP = \fBdropbox::oxygen::nn_shared_ptr\fP< gfbase >"
.br
.in -1c
.SS "Функции"

.in +1c
.ti -1c
.RI "auto \fBirrpoly::operator==\fP (const gf &lb, const gf &rb) \-> bool"
.br
.ti -1c
.RI "auto \fBirrpoly::operator!=\fP (const gf &lb, const gf &rb) \-> bool"
.br
.ti -1c
.RI "auto \fBirrpoly::operator+\fP (const uintmax_t other, const gfn &curr) \-> gfn"
.br
.ti -1c
.RI "auto \fBirrpoly::operator\-\fP (const uintmax_t other, const gfn &curr) \-> gfn"
.br
.ti -1c
.RI "auto \fBirrpoly::operator*\fP (const uintmax_t other, const gfn &curr) \-> gfn"
.br
.ti -1c
.RI "auto \fBirrpoly::operator/\fP (const uintmax_t other, const gfn &curr) \-> gfn"
.br
.ti -1c
.RI "template<class charT , class traits > auto \fBirrpoly::operator<<\fP (std::basic_ostream< charT, traits > &os, const gfn &val) \-> std::basic_ostream< charT, traits > &"
.br
.ti -1c
.RI "template<class charT , class traits > auto \fBirrpoly::operator>>\fP (std::basic_istream< charT, traits > &is, gfn &val) \-> std::basic_istream< charT, traits > &"
.br
.ti -1c
.RI "auto \fBirrpoly::make_gf\fP (const uintmax_t base) \-> gf"
.br
.in -1c
.SH "Подробное описание"
.PP 

.PP
\fBАвтор\fP
.RS 4
Vadim Piven vadim@piven.tech @license Free use of this library is permitted under the guidelines and in accordance with the MIT License (MIT)\&. @url https://github.com/irreducible-polynoms/irrpoly 
.RE
.PP

.SH "Макросы"
.PP 
.SS "#define CHECK_FIELD(comparison)"
\fBМакроопределение:\fP
.PP
.nf
    if (!(comparison)) { \
        throw std::logic_error("field check failed"); \
    }
.fi
Бинарные операции над gfn корректно определены лишь в том случае, когда оба числа принадлежат одному и тому же полю\&. По умолчанию, проверка этого факта выполняется только для конфигурации Debug, чтобы в конфигурации Release добиться наибольшей производительности\&. Однако, если в конфигурации Release проверки также требуется выполнять, достаточно объявить #define IRRPOLY_RELEASE_CHECKED перед подключением заголовочного файла #include <irrpoly\&.h> 
.SS "#define GFN_COMPARISON_OPERATORS(op)"
\fBМакроопределение:\fP
.PP
.nf
    inline auto operator op(const gfn &l, const gfn &r) -> bool { \
        CHECK_FIELD(l\&.field() == r\&.field()) \
        return l\&.value() op r\&.value(); \
    } \
    inline auto operator op(const gfn &l, const uintmax_t r) -> bool { \
        return l\&.value() op (r % l\&.base()); \
    } \
    inline auto operator op(const uintmax_t l, const gfn &r) -> bool { \
        return (l % r\&.base()) op r\&.value(); \
    }
.fi
.SS "#define NN_CHECK_THROW(_e)"
\fBМакроопределение:\fP
.PP
.nf
        (([&] (typename std::remove_reference<decltype(_e)>::type p) { \
        if (!p) throw std::runtime_error(#_e " must not be null"); \
        return dropbox::oxygen::nn<typename std::remove_reference<decltype(p)>::type>( \
            dropbox::oxygen::i_promise_i_checked_for_null, std::move(p)); \
    })(_e))
.fi
.SH "Типы"
.PP 
.SS "using \fBirrpoly::gf\fP = typedef \fBdropbox::oxygen::nn_shared_ptr\fP<gfbase>"
Поле всегда должно существовать, поэтому используется обёртка, не позволяющая хранящим поле переменным иметь значение nullptr\&. Для него корректно определена операция копирования за счёт использования примитива shared_ptr\&. 
.SH "Автор"
.PP 
Автоматически создано Doxygen для irrpoly из исходного текста\&.
