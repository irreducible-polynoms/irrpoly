.TH "include/irrpoly/gf.hpp" 3 "Ср 22 Апр 2020" "Version 2.0.0" "irrpoly" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/irrpoly/gf.hpp
.SH SYNOPSIS
.br
.PP
\fC#include 'nn\&.hpp'\fP
.br
\fC#include <algorithm>\fP
.br
\fC#include <utility>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <cstdint>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <random>\fP
.br
\fC#include <stdexcept>\fP
.br
\fC#include <type_traits>\fP
.br
\fC#include <cassert>\fP
.br
\fC#include <memory>\fP
.br

.SS "Классы"

.in +1c
.ti -1c
.RI "class \fBirrpoly::gfbase\fP"
.br
.RI "Класс gf представляет поле Галуа\&. "
.ti -1c
.RI "class \fBirrpoly::gfn\fP"
.br
.in -1c
.SS "Макросы"

.in +1c
.ti -1c
.RI "#define \fBNN_CHECK_THROW\fP(_e)"
.br
.in -1c
.SS "Определения типов"

.in +1c
.ti -1c
.RI "using \fBirrpoly::gf\fP = \fBdropbox::oxygen::nn_shared_ptr\fP< gfbase >"
.br
.in -1c
.SS "Функции"

.in +1c
.ti -1c
.RI "bool \fBirrpoly::operator==\fP (const gf &lb, const gf &rb)"
.br
.ti -1c
.RI "bool \fBirrpoly::operator!=\fP (const gf &lb, const gf &rb)"
.br
.ti -1c
.RI "gfn \fBirrpoly::operator+\fP (const uintmax_t other, const gfn &curr)"
.br
.ti -1c
.RI "gfn \fBirrpoly::operator\-\fP (const uintmax_t other, const gfn &curr)"
.br
.ti -1c
.RI "gfn \fBirrpoly::operator*\fP (const uintmax_t other, const gfn &curr)"
.br
.ti -1c
.RI "gfn \fBirrpoly::operator/\fP (const uintmax_t other, const gfn &curr)"
.br
.ti -1c
.RI "std::ostream & \fBirrpoly::operator<<\fP (std::ostream &os, const gfn &val)"
.br
.ti -1c
.RI "std::istream & \fBirrpoly::operator>>\fP (std::istream &is, gfn &val)"
.br
.ti -1c
.RI "gf \fBirrpoly::make_gf\fP (const uintmax_t base)"
.br
.in -1c
.SH "Подробное описание"
.PP 

.PP
\fBАвтор\fP
.RS 4
Vadim Piven vadim@piven.tech @license Free use of this library is permitted under the guidelines and in accordance with the MIT License (MIT)\&. @url https://github.com/irreducible-polynoms/irrpoly 
.RE
.PP

.SH "Макросы"
.PP 
.SS "#define NN_CHECK_THROW(_e)"
\fBМакроопределение:\fP
.PP
.nf
        (([&] (typename std::remove_reference<decltype(_e)>::type p) { \
        if (!p) throw std::runtime_error(#_e " must not be null"); \
        return dropbox::oxygen::nn<typename std::remove_reference<decltype(p)>::type>( \
            dropbox::oxygen::i_promise_i_checked_for_null, std::move(p)); \
    })(_e))
.fi
.SH "Автор"
.PP 
Автоматически создано Doxygen для irrpoly из исходного текста\&.
