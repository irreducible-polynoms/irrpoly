.TH "checker< P >::control_type" 3 "Вс 10 Ноя 2019" "Version 1.0.0" "irrpoly" \" -*- nroff -*-
.ad l
.nh
.SH NAME
checker< P >::control_type \- Cлужебный класс, используется для выполнения проверки в несколько потоков\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <checker\&.hpp>\fP
.SS "Открытые члены"

.in +1c
.ti -1c
.RI "\fBcontrol_type\fP (const typename \fBchecker\fP< P >::\fBirreducible_method\fP irr_meth, const typename \fBchecker\fP< P >::\fBprimitive_method\fP prim_meth, const unsigned threads_num) noexcept(false)"
.br
.ti -1c
.RI "void \fBlock\fP () noexcept"
.br
.RI "Блокировка мьютекса\&. "
.ti -1c
.RI "void \fBunlock\fP () noexcept"
.br
.RI "Разблокировка мьютекса\&. "
.ti -1c
.RI "void \fBwait\fP () noexcept"
.br
.RI "Ожидание уведомления условной переменной\&. "
.ti -1c
.RI "void \fBsignal\fP () noexcept"
.br
.RI "Уведомление условной переменной\&. "
.ti -1c
.RI "std::vector< \fBchecker\fP< P > > & \fBcheckers\fP () noexcept"
.br
.in -1c
.SH "Подробное описание"
.PP 

.SS "template<uint32_t P>
.br
class checker< P >::control_type"
Cлужебный класс, используется для выполнения проверки в несколько потоков\&. 
.SH "Конструктор(ы)"
.PP 
.SS "template<uint32_t P> \fBchecker\fP< P >::control_type::control_type (const typename \fBchecker\fP< P >::\fBirreducible_method\fP irr_meth, const typename \fBchecker\fP< P >::\fBprimitive_method\fP prim_meth, const unsigned threads_num)\fC [inline]\fP, \fC [noexcept]\fP"
Инициализация мьютекса и условной переменной, создание требуемого числа потоков и хранилищ данных\&. На выходе мьютекс находится в состоянии locked, все потоки запущены и находятся в состоянии detached\&. 
.SH "Методы"
.PP 
.SS "template<uint32_t P> std::vector<\fBchecker\fP<P> >& \fBchecker\fP< P >::control_type::checkers ()\fC [inline]\fP, \fC [noexcept]\fP"
Возвращает структуры, хранящие все данные потока: проверяемый многочлен, текущее состояение потока и результат проверки многочлена\&. 

.SH "Автор"
.PP 
Автоматически создано Doxygen для irrpoly из исходного текста\&.
